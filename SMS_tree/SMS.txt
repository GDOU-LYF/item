实现对学生信息的插入，输出，修改
对学生信息的浏览和特定查询

C++：对文件操作
数据结构用树
窗口：wind32 or QT


首先，学生信息的存储方式：文本文件方式存储（txt），推荐的保存格式如下： 字段间使用一致性的分隔符，用逗号。
201611701208，张三，男，19，广东省，软件工程
201611701209，张小明，男，18，浙江省，软件工程
201611701201，白小云，女，18，广东省，软件工程
201611301107，赵晓飞，男，19，广东省，自动控制

201611701208 张三 男 19 广东省 软件工程
201611701209 张小明 男 18 浙江省 软件工程
201611301107 赵晓飞 男 19 广东省 自动控制
201611701201 白小云 女 18 广东省 软件工程


1。学生文件结构的改变
 支持增加字段： 比如增加一个“身份证号”，相应的所有记录必须增加相应的值，考虑采用什么样的策略保证一个合理的时间复杂度和空间复杂度的平衡。
 同理支持减少字段

2。数据插入
能逐条添加单个学生记录，要求保证学生记录的学号唯一性，并且学号值不允许为空
能判断每个字段的输入值是否符合格式要求，
比如
学号是由12个数字字符组成，前四个字符是合常理的年份；
性别只能输入男或者女；
年龄是数字字符，范围介于一个合理的区间

要求能接收缺少某个字段值的学生记录

3. 数据查询
– 因为学生文件中的学生信息的排列顺序是按照添加的顺序排列的，因此为了提高以学号为条件进行查询的效率，需要为学生记录生成一个索引结构，索引结构要求按照学号有序排列，能快速定位某条记录在文件中的偏移位置，索引要求使用二叉树。
– 索引的维持：当有数据插入和删除时，必须要考虑索引的联动修改。
– 索引的生成时机，索引结构是否保存？自行考虑策略

– 查询要求能够支持同时指定多个条件的查询：
例如查询“18岁的浙江省男生信息”；
– 查询结果按记录/行显示；
– 能进行模糊查询，比如查询名字中包含“小”字的学生；
– 能统计满足某个条件的学生人数；

4. 数据删除
 可以删除指定条件的学生行，删除后的文件必须调整记录位置，删除行后必须同时更新索引文件。

5. 数据更新
可以更新指定条件的学生行，更新后的文件必须调整文件位置，更新行后必须更新索引文件。思考什么样的策略更有效。
201611701201 白小云 女 18 广东省 软件工程
->
201611701201 白大云 男 20 广东省 软件工程
• 其他需求
– 可看性：界面符合一般人的审美观；
– 易用性：操作便利，有符合使用习惯的流程控制过程，有很好的“进入”和“退出”机制。
– 健壮性：能够应对处理非法输入和非法操作；
– 性能：时间和空间复杂度要求；
